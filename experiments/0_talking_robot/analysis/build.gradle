task execute() {
	dependsOn tasks.matching { it.name.startsWith("process_") }
}

task createProcessTasks() {
	eachSnapshot { snapshotDir ->
		def normalizedPath = snapshotDir.path.replaceAll(/[\., \/]/, "")

		tasks.create(type:Exec, name:"process_$normalizedPath") {
			workingDir snapshotDir.absolutePath
			commandLine 'gradle', 'test'

			ignoreExitValue true			
		}
	}
}

task setup << {
	def buildFile = new File("snapshot-build.gradle")

	eachSnapshot { snapshotDir ->
		def writer = new File(snapshotDir, "build.gradle").newWriter()
		writer << buildFile.text
		writer.close()
	}
}

task clean << {
	eachSnapshot { snapshotDir ->
		new File(snapshotDir, "build.gradle").delete()
	}
}

def eachSnapshot(Closure closure) {
	def dataFolder = new File(".")
	dataFolder.eachDir { devFolder ->
		def srcDevFolder = new File(devFolder, "src")

		if(!srcDevFolder.exists()) {
			return
		}

		new File(devFolder, "src").eachDir { snapshotDir ->
			closure(snapshotDir)
		}
	}	
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.8'
	scriptFile = "analysis"
}
