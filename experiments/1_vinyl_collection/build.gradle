apply plugin: "groovy"
apply plugin: "eclipse"

ext {
	timestamp = String.valueOf System.currentTimeMillis()
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:2.1.0"
    }
}
apply plugin: 'cobertura'

repositories {
	mavenCentral()
}

dependencies {
	compile 'org.codehaus.groovy:groovy-all:1.8.8'

	testCompile "org.spockframework:spock-core:0.7-groovy-1.8"
	testCompile "cglib:cglib-nodep:2.2.2"
	testCompile "org.objenesis:objenesis:1.2"
}

cobertura {
	coverageExcludes = ['.*derails.*']
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.8'
	scriptFile = "experiment"
}

task(run, dependsOn: 'classes', type: JavaExec) {
	main = 'carlosgsouza.vinylshop.VinylCollectionApp'
	standardInput = System.in
	classpath = sourceSets.main.runtimeClasspath
}


	
	
	def setup() {
		File dataFolder = new File("data")
		if(dataFolder.exists()) {
			println "Experiment already started"
			return false
		}
		dataFolder.mkdirs()
		
		return true
	}
	
	def sendEvent(event, message) { 
		File dataFolder = new File("data")
		if(!dataFolder.exists()) {
			println "Experiment not started yet"
			
			return
		}
		
		dataFolder.mkdirs()
		
		File eventsFile = new File(dataFolder, "events.txt")
		eventsFile << "$event\t$project.timestamp\n"
		
		println message
	}
	
		
task('start') << { 
	def setupOk = setup()
	
	if(setupOk) {
		sendEvent("START", "Experiment started. Time to get your hands dirty!\nps: Thank you for doing this for me. I promise I will get you a beer when this is over.")
	}
}

task('pause') << { 
	sendEvent("PAUSE", "You are working for too long. Please have some rest.\nRemember to invoke the 'resume' task when you come back.") 
}

task('resume') << { 
	sendEvent("RESUME", "Already back to work? ALL RIGHT!!! Let's do it") 
}

task('sendFinishEvent') << { 
	sendEvent("FINISH", "Finished") 
}

task('packageData', type:Zip, dependsOn:'sendFinishEvent') {
	from 'data'
	baseName 'experiment-data'
}

project.task('finish', dependsOn:'packageData') << {
	println "\n\n>>> ONE LAST THING! I have created a zip file here: /build/distributions/experiment-data.zip. Please send it to carlosgsouza@gmail.com <<<"
	println "ps: You are a good person. Thanks for helping me"
}


